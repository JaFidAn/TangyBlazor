@page "/learnBlazor/BlazorJS"
@inject IJSRuntime _JsRuntime

<h3>BlazorJS</h3>

<div class="row">
	<button class="btn btn-secondary m-2" style="width:200px;" @onclick="TestConfimBox">Test Confirm Button</button> 
</div>
<br />

<div class="row">
	<button class="btn btn-success m-2" style="width:200px;" @onclick="ToastrSuccess">Toastr Success</button> 
	<button class="btn btn-danger m-2" style="width:200px;" @onclick="ToastrFailure">Toastr Failure</button>
</div>
<br />

<div class="row"> <br />
	<button class="btn btn-success m-2" style="width:200px;" @onclick="SweetAlertSuccess">Sweet Alert Success</button> 
	<button class="btn btn-danger m-2" style="width:200px;" @onclick="SweetAlertFailure">Sweet Alert Failure</button>
</div>

<div class="row">
	@if (ConfirmResult)
	{
		<p>Confirmation has been made!</p>
	}
	else
	{
		<p>Confirmation Pending!</p>
	}
</div>

@code {
	private string ConfirmMessage = "Are you sure you want to click?";
	private bool ConfirmResult { get; set; }

	private async Task TestConfimBox()
	{
		ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
	}

	private async Task ToastrSuccess()
	{
		await _JsRuntime.ToastrSuccess("Operation Successful");
	}

	private async Task ToastrFailure()
	{
		await _JsRuntime.ToastrError("Operation Failed");
	}

	private async Task SweetAlertSuccess()
	{
		await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Completed Successfully");
	}

	private async Task SweetAlertFailure()
	{
		await _JsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed Successfully");
	}
}
